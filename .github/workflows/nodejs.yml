name: Node.js CI

on:
  push:
    paths:
      - '.github/workflows/nodejs.yml'
      - 'firebase.json'
      - '.firebaserc'
      - 'src/**'
      - 'function/**'
      - 'package-lock.json'
jobs:
  terraform-dev:
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: https://chalkdust.dev.utah.gov
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: Checkout terraform
        uses: actions/checkout@v2
        with:
          repository: agrc/gcp-terraform
          token: ${{ secrets.CLONE_SERVICE_ACCOUNT}}
          path: ./terraform

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
        working-directory: ./terraform

      - name: Terraform init
        id: init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./terraform

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
        working-directory: ./terraform

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  deploy-dev:
    runs-on: ubuntu-latest
    needs: [terraform-dev]
    environment:
      name: dev
      url: https://chalkdust.dev.utah.gov
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Cache node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: npm ci

      - name: Build app
        run: npm run build

      - name: Cache firebase
        uses: actions/cache@v2
        with:
          path: ./.firebase
          key: ${{ runner.OS }}-firebase-${{ hashFiles('**/*.cache') }}
          restore-keys: |
            ${{ runner.OS }}-firebase-
            ${{ runner.OS }}-

      - name: Firebase deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.SERVICE_ACCOUNT }}'
          channelId: live
          projectId: '${{ secrets.PROJECT_ID }}'
          target: '${{ secrets.PROJECT_ID }}'
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels

  deploy-prod:
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: https://chalkdust.ugrc.utah.gov
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Cache node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: npm ci

      - name: Build app
        run: npm run build

      - name: Cache firebase
        uses: actions/cache@v2
        with:
          path: ./.firebase
          key: ${{ runner.OS }}-firebase-${{ hashFiles('**/*.cache') }}
          restore-keys: |
            ${{ runner.OS }}-firebase-
            ${{ runner.OS }}-

      - name: Firebase deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.SERVICE_ACCOUNT }}'
          channelId: live
          projectId: '${{ secrets.PROJECT_ID }}'
          target: '${{ secrets.PROJECT_ID }}'
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels
